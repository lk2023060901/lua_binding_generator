# LuaBindingRuntimeConfig.cmake.in
# CMake配置文件模板

@PACKAGE_INIT@

# 检查依赖的组件
include(CMakeFindDependencyMacro)

# 查找Sol2
find_path(SOL2_INCLUDE_DIRS "sol/sol.hpp"
    HINTS 
        @CMAKE_INSTALL_PREFIX@/include
        @SOL2_INCLUDE_DIRS@
    PATHS
        /usr/local/include
        /usr/include
    DOC "Sol2 include directory"
)

if(NOT SOL2_INCLUDE_DIRS)
    set(LuaBindingRuntime_FOUND FALSE)
    if(NOT LuaBindingRuntime_FIND_QUIETLY)
        message(WARNING "Sol2 not found")
    endif()
    return()
endif()

# 查找Lua
find_dependency(PkgConfig QUIET)
if(PkgConfig_FOUND)
    pkg_check_modules(LUA lua5.4 lua5.3 lua5.2 lua5.1 lua>=5.1)
endif()

if(NOT LUA_FOUND)
    find_path(LUA_INCLUDE_DIRS "lua.h"
        HINTS 
            @CMAKE_INSTALL_PREFIX@/include
            @LUA_INCLUDE_DIRS@
        PATHS
            /usr/local/include/lua5.4
            /usr/local/include/lua5.3
            /usr/local/include/lua5.2
            /usr/local/include/lua5.1
            /usr/local/include
            /usr/include/lua5.4
            /usr/include/lua5.3
            /usr/include/lua5.2
            /usr/include/lua5.1
            /usr/include
        DOC "Lua include directory"
    )
    
    find_library(LUA_LIBRARIES
        NAMES lua5.4 lua5.3 lua5.2 lua5.1 lua liblua
        HINTS 
            @CMAKE_INSTALL_PREFIX@/lib
            @LUA_LIBRARIES@
        PATHS
            /usr/local/lib
            /usr/lib
        DOC "Lua library"
    )
    
    if(LUA_INCLUDE_DIRS AND LUA_LIBRARIES)
        set(LUA_FOUND TRUE)
    endif()
endif()

if(NOT LUA_FOUND)
    set(LuaBindingRuntime_FOUND FALSE)
    if(NOT LuaBindingRuntime_FIND_QUIETLY)
        message(WARNING "Lua not found")
    endif()
    return()
endif()

# 包含导出的目标
include("${CMAKE_CURRENT_LIST_DIR}/LuaBindingRuntimeTargets.cmake")

# 设置变量
set(LuaBindingRuntime_LIBRARIES LuaBindingRuntime::Runtime)
set(LuaBindingRuntime_INCLUDE_DIRS "@CMAKE_INSTALL_PREFIX@/include")

# 版本检查
set(LuaBindingRuntime_VERSION "@PROJECT_VERSION@")

check_required_components(LuaBindingRuntime)