# Lua CMakeLists.txt generated by FindLua.cmake
cmake_minimum_required(VERSION 3.16)
project(lua VERSION 5.4.8 LANGUAGES C)

# 编译选项
if(UNIX AND NOT APPLE)
    add_definitions(-DLUA_USE_LINUX)
elseif(APPLE)
    add_definitions(-DLUA_USE_MACOSX)
elseif(WIN32)
    add_definitions(-DLUA_USE_WINDOWS)
endif()

# Lua 核心源文件
set(LUA_CORE_SOURCES
    src/lapi.c src/lcode.c src/lctype.c src/ldebug.c src/ldo.c src/ldump.c
    src/lfunc.c src/lgc.c src/llex.c src/lmem.c src/lobject.c src/lopcodes.c
    src/lparser.c src/lstate.c src/lstring.c src/ltable.c src/ltm.c
    src/lundump.c src/lvm.c src/lzio.c
)

# Lua 库源文件
set(LUA_LIB_SOURCES
    src/lauxlib.c src/lbaselib.c src/lcorolib.c src/ldblib.c src/liolib.c
    src/lmathlib.c src/loslib.c src/lstrlib.c src/ltablib.c src/lutf8lib.c
    src/loadlib.c src/linit.c
)

# 静态库目标
add_library(lua_static STATIC ${LUA_CORE_SOURCES} ${LUA_LIB_SOURCES})
set_target_properties(lua_static PROPERTIES 
    OUTPUT_NAME lua
    POSITION_INDEPENDENT_CODE ON
)

# 设置头文件目录
target_include_directories(lua_static PUBLIC src)

# 平台特定链接库
if(UNIX AND NOT APPLE)
    target_link_libraries(lua_static m dl)
elseif(APPLE)
    target_link_libraries(lua_static m)
endif()

# 动态库目标 (可选)
if(BUILD_SHARED_LIBS)
    add_library(lua_shared SHARED ${LUA_CORE_SOURCES} ${LUA_LIB_SOURCES})
    set_target_properties(lua_shared PROPERTIES 
        OUTPUT_NAME lua
        VERSION 5.4.8
        SOVERSION 5.4
    )
    target_include_directories(lua_shared PUBLIC src)
    
    if(UNIX AND NOT APPLE)
        target_link_libraries(lua_shared m dl)
    elseif(APPLE)
        target_link_libraries(lua_shared m)
    endif()
endif()

# Lua 解释器可执行文件
add_executable(lua_exe src/lua.c)
target_link_libraries(lua_exe lua_static)
set_target_properties(lua_exe PROPERTIES OUTPUT_NAME lua)

# Luac 编译器可执行文件
add_executable(luac_exe src/luac.c)
target_link_libraries(luac_exe lua_static)
set_target_properties(luac_exe PROPERTIES OUTPUT_NAME luac)

# 创建别名目标
add_library(lua::lua ALIAS lua_static)
if(BUILD_SHARED_LIBS)
    add_library(lua::lua_shared ALIAS lua_shared)
endif()

# 安装配置
install(TARGETS lua_static lua_exe luac_exe
    LIBRARY DESTINATION lib
    ARCHIVE DESTINATION lib
    RUNTIME DESTINATION bin
)

if(BUILD_SHARED_LIBS)
    install(TARGETS lua_shared
        LIBRARY DESTINATION lib
        RUNTIME DESTINATION bin
    )
endif()

install(FILES src/lua.h src/luaconf.h src/lualib.h src/lauxlib.h
    DESTINATION include
)
